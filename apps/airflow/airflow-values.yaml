# apps/airflow/airflow-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-values
  namespace: airflow
  labels:
    app.kubernetes.io/part-of: airflow
    app.kubernetes.io/managed-by: flux
data:
  values.yaml: |
    # =============== Core Airflow ===============
    airflow:
      image:
        repository: apache/airflow
        tag: 2.7.3  # Pinned to latest stable
        pullPolicy: IfNotPresent
        pullSecrets: []
      
      executor: CeleryExecutor
      config:
        # Security
        AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
        AIRFLOW__WEBSERVER__SECRET_KEY: ${WEBSERVER_SECRET}
        AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
        
        # Performance
        AIRFLOW__SCHEDULER__SCHEDULE_AFTER_TASK_EXECUTION: "False"
        AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 30
        AIRFLOW__CORE__PARALLELISM: 32
        AIRFLOW__CORE__DAG_CONCURRENCY: 16

        # Monitoring
        AIRFLOW__METRICS__STATSD_ON: "True"
        AIRFLOW__METRICS__STATSD_HOST: "kube-prometheus-stack-prometheus-statsd.monitoring.svc"
        AIRFLOW__METRICS__STATSD_PORT: "9125"
        AIRFLOW__METRICS__STATSD_PREFIX: "airflow"

    # =============== PostgreSQL ===============
    postgresql:
      enabled: true
      postgresqlUsername: airflow
      postgresqlDatabase: airflow_prod
      persistence:
        enabled: true
        size: 100Gi
        storageClass: "standard"
      resources:
        requests:
          cpu: "2"
          memory: "4Gi"
        limits:
          cpu: "4"
          memory: "8Gi"

    # =============== Redis (Celery Broker) ===============
    redis:
      enabled: true
      architecture: "standalone"
      auth:
        password: ${REDIS_PASSWORD}
      master:
        persistence:
          enabled: true
          size: 50Gi
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"

    # =============== Webserver ===============
    webserver:
      replicas: 3
      resources:
        requests:
          cpu: "1"
          memory: "4Gi"
        limits:
          cpu: "2"
          memory: "8Gi"
      livenessProbe:
        initialDelaySeconds: 60
        periodSeconds: 30
      ingress:
        enabled: true
        className: "nginx"
        hosts:
          - "airflow.example.com"
        tls:
          - secretName: "airflow-tls"
            hosts: ["airflow.example.com"]

    # =============== Scheduler ===============
    scheduler:
      replicas: 2
      resources:
        requests:
          cpu: "2"
          memory: "4Gi"
        limits:
          cpu: "4"
          memory: "8Gi"
      livenessProbe:
        initialDelaySeconds: 120
        periodSeconds: 30

    # =============== Workers ===============
    workers:
      replicas: 4
      resources:
        requests:
          cpu: "2"
          memory: "8Gi"
        limits:
          cpu: "4"
          memory: "16Gi"
      persistence:
        enabled: true
        size: 50Gi
        storageClass: "standard"
      terminationGracePeriodSeconds: 600

    # =============== Flower ===============
    flower:
      enabled: true
      replicas: 1
      ingress:
        enabled: true
        hosts: ["flower.airflow.example.com"]

    # =============== Monitoring ===============
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: "monitoring"
        interval: "30s"
        labels:
          release: "kube-prometheus-stack"

    # =============== Logging ===============
    logs:
      persistence:
        enabled: true
        existingClaim: "airflow-logs-pvc"